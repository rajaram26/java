import java.util.*;
public class MyClass {
    public static Scanner r=new Scanner(System.in);
    public static int n=r.nextInt();
    public static int maze[][]=new int[n][n];
    public static int sol[][]=new int[n][n];
    public static int best[][]=new int[n][n];
    public static int mincount=Integer.MAX_VALUE;
    
    public static void empty(){
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                best[i][j]=0;
            }
        }
    }
    
    
    public static void bestSolution(){
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                best[i][j]=sol[i][j];
            }
        }
    }
    
    public static boolean solveMaze(int x,int y,int sol[][],int count){
        if((x==n-1 && y==n-1) || (x==0 && y==0) || (x==0 && y==n-1) || (x==n-1 && y==0) )
        {
            // if(maze[x][y]==0){
                sol[x][y]=1;
            // }
            count++;
            if(count<mincount)
            {
                mincount=count;
                empty();
                bestSolution();
            }
            return false;
        }
        if((x>=0 && x<n) && (y>=0 && y<n) && maze[x][y]==0 && sol[x][y]==0)
        {
            sol[x][y]=1;
            
            if(solveMaze(x+1,y,sol,count+1)==true)
                return true;
            if(solveMaze(x-1,y,sol,count+1)==true)
                return true;
            if(solveMaze(x,y+1,sol,count+1)==true)
                return true;
            if(solveMaze(x,y-1,sol,count+1)==true)
                return true;
                
            sol[x][y]=0;
            return false;
        }
        
        return false;
    }
    public static void main(String args[]) {
        int s1=r.nextInt();
        int s2=r.nextInt();
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                maze[i][j]=r.nextInt();
            }
        }
        solveMaze(s1,s2,sol,1);
        
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                System.out.print(best[i][j]+" ");
            }
            System.out.println();
        }
    }
}
